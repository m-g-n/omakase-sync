name: Create Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リリース作成に必要

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      # omakase-sync.php からバージョン番号を抽出
      - name: バージョン番号抽出
        id: get_version
        run: |
          VERSION=$(grep -E "^Version:\s*[0-9]+\.[0-9]+\.[0-9]+" omakase-sync.php | head -1 | sed -E 's/Version:\s*//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # バージョン比較。既存リリースより小さい場合はスキップ
      - name: バージョン比較
        id: version_check
        run: |
          # 最新リリースタグ取得
          LATEST_TAG=$(gh release view --json tagName -q .tagName || echo "0.0.0")
          echo "最新リリースタグ: $LATEST_TAG"
          echo "今回のバージョン: $VERSION"
          # 比較
          if [ "$(printf '%s\n' "$LATEST_TAG" "$VERSION" | sort -V | tail -n1)" != "$VERSION" ]; then
            echo "バージョンが既存リリース以下のためスキップ"
            echo "skip_release=true" >> $GITHUB_ENV
          else
            echo "skip_release=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #composerの実施
      - name: Composer install
        if: env.skip_release != 'true'
        uses: docker://composer:latest
        with:
          args: install

      # release作成
      - name: Create Release
        if: env.skip_release != 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: false

      # release用のzip作成 https://github.com/marketplace/actions/zip-release
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.4.1
        with:
          filename: 'omakase-sync.zip' # ファイル名
          exclusions: '*.git* /*node_modules/* .editorconfig /*src/*scss/*' # 除外設定
          directory: '.'
          path: '.'
          type: 'zip'

      # releaseにzipファイルを添付
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./omakase-sync.zip
          asset_name: omakase-sync.zip
          asset_content_type: application/zip
